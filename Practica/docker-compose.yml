services:
  web:
    build: ./app
    # Cargar el fichero con las variables de entorno
    env_file:
      - env_test1.env
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
    # Espera 10 segundos antes de lanzar la creacion de la DDBB  
    entrypoint: ["sh", "-c", "sleep 10 && python app.py"]  

  db:
    image: postgres:13-alpine
    # Cargar el fichero con las variables de entorno
    env_file:
      - env_test1.env
    volumes:
      - db_data:/var/lib/postgresql/data
      # Configuracion inicial de la base de dattos 
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./generate_init_sql.sh:/docker-entrypoint-initdb.d/generate_init_sql.sh
      #- ./env_test1.env:/docker-entrypoint-initdb.d/env_test1.env
    #entrypoint: ["sh", "-c", "chmod +x /docker-entrypoint-initdb.d/generate_init_sql.sh && /docker-entrypoint-initdb.d/generate_init_sql.sh && docker-entrypoint.sh postgres"]
    
volumes:
  db_data:
